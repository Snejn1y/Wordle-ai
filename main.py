import pygame
import random
import sys
from paramets import *

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Pygame
pygame.init()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Wordle –Ω–∞ Pygame")

# –®—Ä–∏—Ñ—Ç
FONT = pygame.font.Font(None, 70)
KEYBOARD_FONT = pygame.font.Font(None, 40)
MESSAGE_FONT = pygame.font.Font(None, 50)

# –°–ø–∏—Å–æ–∫ —Å–ª—ñ–≤
valid_words = set(words_list)  # –ù–∞–±—ñ—Ä –¥–ª—è —à–≤–∏–¥–∫–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
secret_word = random.choice(words_list).upper()

# –ó–º—ñ–Ω–Ω—ñ –≥—Ä–∏
current_guess = ""
guesses = []
keyboard_state = {chr(k): GRAY for k in range(65, 91)}  # –°—Ç–∞–Ω–∏ –ª—ñ—Ç–µ—Ä –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
message = ""

# –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–µ–∫—Å—Ç—É
def draw_text(text, x, y, color, font=FONT):
    rendered_text = font.render(text, True, color)
    WIN.blit(rendered_text, (x, y))

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–æ–≥–æ —Å–ª–æ–≤–∞
def check_guess(secret_word, guess):
    result = []
    for i, char in enumerate(guess):
        if char == secret_word[i]:
            result.append(GREEN)  # –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –ª—ñ—Ç–µ—Ä–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –º—ñ—Å—Ü—ñ
            keyboard_state[char] = GREEN
        elif char in secret_word:
            result.append(YELLOW)  # –õ—ñ—Ç–µ—Ä–∞ –≤ —Å–ª–æ–≤—ñ, –∞–ª–µ –Ω–∞ —ñ–Ω—à–æ–º—É –º—ñ—Å—Ü—ñ
            if keyboard_state[char] != GREEN:
                keyboard_state[char] = YELLOW
        else:
            result.append(DARK_GRAY)  # –õ—ñ—Ç–µ—Ä–∞ –≤—ñ–¥—Å—É—Ç–Ω—è –≤ —Å–ª–æ–≤—ñ
            keyboard_state[char] = DARK_GRAY
    return result

# –ú–∞–ª—é–≤–∞–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
def draw_keyboard():
    rows = ["QWERTYUIOP", "ASDFGHJKL", "ZXCVBNM"]
    y_offsets = [660, 720, 780]
    key_width = 50
    key_height = 50
    spacing = 10

    for row, y in zip(rows, y_offsets):
        x_start = (WIDTH - (len(row) * (key_width + spacing) - spacing)) // 2
        for i, char in enumerate(row):
            x = x_start + i * (key_width + spacing)
            pygame.draw.rect(WIN, keyboard_state[char], (x, y, key_width, key_height), border_radius=5)
            draw_text(char, x + 12, y + 5, WHITE, font=KEYBOARD_FONT)

# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –≥—Ä–∏
def main():
    global current_guess, guesses, message, secret_word, keyboard_state
    clock = pygame.time.Clock()
    running = True
    game_over = False

    while running:
        WIN.fill(WHITE)

        # –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
                break

            if not game_over:
                # –í–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_BACKSPACE:
                        current_guess = current_guess[:-1]
                    elif event.key == pygame.K_RETURN:
                        if len(current_guess) == 5:
                            if current_guess not in valid_words:
                                message = "–¶—å–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–µ–º–∞—î –≤ —Å–ª–æ–≤–Ω–∏–∫—É!"
                            else:
                                guesses.append(current_guess)
                                if current_guess == secret_word:
                                    message = f"üéâ –í–∏ –≤–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ: {secret_word}"
                                    game_over = True
                                current_guess = ""
                                if len(guesses) == attempts and guesses[-1] != secret_word:
                                    message = f"üòû –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏! –°–ª–æ–≤–æ –±—É–ª–æ: {secret_word}"
                                    game_over = True
                    elif len(current_guess) < 5 and event.unicode.isalpha():
                        current_guess += event.unicode.upper()
            else:
                # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≥—Ä–∏
                if event.type == pygame.KEYDOWN and event.key == pygame.K_r:
                    current_guess = ""
                    guesses = []
                    secret_word = random.choice(words_list).upper()
                    print(secret_word)
                    keyboard_state = {chr(k): GRAY for k in range(65, 91)}
                    message = ""
                    game_over = False

        # –ú–∞–ª—é–≤–∞–Ω–Ω—è –≤–≤–µ–¥–µ–Ω–∏—Ö —Å–ª—ñ–≤
        for i, guess in enumerate(guesses):
            colors = check_guess(secret_word, guess)
            for j, char in enumerate(guess):
                pygame.draw.rect(WIN, colors[j], (j * 100 + 50, i * 100 + 50, 90, 90))
                draw_text(char, j * 100 + 75, i * 100 + 65, WHITE)

        # –ú–∞–ª—é–≤–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å–ª–æ–≤–∞
        if not game_over:
            for j, char in enumerate(current_guess):
                pygame.draw.rect(WIN, GRAY, (j * 100 + 50, len(guesses) * 100 + 50, 90, 90))
                draw_text(char, j * 100 + 75, len(guesses) * 100 + 65, WHITE)

        # –ú–∞–ª—é–≤–∞–Ω–Ω—è —Ä–∞–º–æ–∫
        for i in range(attempts):
            for j in range(5):
                pygame.draw.rect(WIN, BLACK, (j * 100 + 50, i * 100 + 50, 90, 90), 2)

        # –ú–∞–ª—é–≤–∞–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
        draw_keyboard()

        # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if message:
            x = WIDTH // 2 - len(message) * 12
            if x < 0:
                x = 0
            draw_text(message, x, 10, RED, font=MESSAGE_FONT)  # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–≤–µ—Ä—Ö—É
            if game_over:
                draw_text("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'R' –¥–ª—è –ø–æ–≤—Ç–æ—Ä—É", WIDTH // 2 - 150, HEIGHT - 50, BLACK,
                          font=MESSAGE_FONT)  # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤–Ω–∏–∑—É

        pygame.display.update()
        clock.tick(30)

    pygame.quit()
    sys.exit()


if __name__ == "__main__":
    print(secret_word)  # –î–ª—è –≤—ñ–¥–ª–∞–¥–∫–∏
    main()